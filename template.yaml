AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  URL Shortner

  URL Shortner stack definition.

Parameters:
  HostedZoneIdParameter:
    Type: String
    Default: Z046538638R1CSJEELJY9
    Description: "Route 53 hostzone identity"
  DefaultDomainParameter:
    Type: String
    Default: api.sname.be
    Description: "default domain name"

  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Resources:
  URLAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL
      Cors: "'*'"
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://url-shortner-swagger/swagger.yaml

  URLDomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Properties:
      DomainName: 
        Ref: DefaultDomainParameter
      SecurityPolicy: TLS_1_2
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: "arn:aws:acm:us-east-2:291566366743:certificate/2da41b24-96f9-4b06-b62c-dbe5f46b998f"

  URLDomainMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: ''
      DomainName:
        Ref: URLDomainName
      Stage: !Ref URLAPI.Stage
      RestApiId: 
        Ref: URLAPI


  HostDNSRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: 
        Ref: DefaultDomainParameter
      HostedZoneId: 
        Ref: HostedZoneIdParameter
      Type: 'A'
      AliasTarget: 
        HostedZoneId:
          Fn::GetAtt:
            - URLDomainName
            - RegionalHostedZoneId
        DNSName: 
          Fn::GetAtt:
            - URLDomainName
            - RegionalDomainName
        EvaluateTargetHealth: false

  HashFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: !Sub "s3://urlshortnerbucket/${Version}/src"
      Handler: hash.handler
      Runtime: nodejs12.x
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
      Events:
        RedirectAPI:
          Type: Api
          Properties:
            Path: /{hashcode}
            Method: GET
            RestApiId: 
              Ref: URLAPI

  URLOperationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: !Sub "s3://urlshortnerbucket/${Version}"
      Handler: app.handler
      Runtime: nodejs12.x
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
      Events:
        URLAddAPI:
          Type: Api
          Properties:
            Path: /url
            Method: POST
            RestApiId: 
              Ref: URLAPI
            RequestModel:
              Model: URL
              Required: true
        URLDeleteAPI:
          Type: Api
          Properties:
            Path: /url/{hashcode}
            Method: DELETE
            RestApiId: 
              Ref: URLAPI

  urlTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: urlTable
      AttributeDefinitions:
        - AttributeName: hashid
          AttributeType: S
      KeySchema:  
        - AttributeName: hashid
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5  






